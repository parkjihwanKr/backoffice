name: Java CI/CD with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      # grant permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # gradle caching
      - name: Gradle Caching
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build Gradle
      - name: Build with Gradle
        run: ./gradlew assemble

      # Create application.yml if it doesn't exist
      - name: Create application.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml

      # Verify application.yml
      - name: Verify application.yml
        run: cat ./src/main/resources/application.yml

      # test code build
      # - name: Test with Gradle
      #   run: ./gradlew test

      # CD
      # docker login
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: find Dockerfile
        run: find . -name Dockerfile

      - name: Docker Image Build And Push
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/backoffice:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/backoffice:latest

      - name: Run Application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            sudo docker kill backoffice || true
            sudo docker rm -f backoffice || true
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/backoffice || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backoffice
            sudo docker run -d -p 8082:8082 --name backoffice ${{ secrets.DOCKERHUB_USERNAME }}/backoffice